interface Display {
    void show(); 
}

interface Aircraft extends Display {
    String aircraftType(); 
    int calculateCapacity();
}

class PassengerJet implements Aircraft {
    private int rows;
    private int seatsPerRow;

    public PassengerJet(int rows, int seatsPerRow) {
        this.rows = rows;
        this.seatsPerRow = seatsPerRow;
    }

    @Override
    public String aircraftType() {
        return "Passenger Jet";
    }

    @Override
    public int calculateCapacity() {
        return rows * seatsPerRow; 
    }

    @Override
    public void show() {
        System.out.println("Aircraft Type: " + aircraftType());
        System.out.println("Passenger Capacity: " + calculateCapacity());
    }
}

class CargoPlane implements Aircraft {
    private double length;
    private double width;

  
    public CargoPlane(double length, double width) {
        this.length = length;
        this.width = width;
    }

    @Override
    public String aircraftType() {
        return "Cargo Plane";
    }

    @Override
    public int calculateCapacity() {
    
        double cargoArea = length * width;
        return (int) (cargoArea / 10); 
    }

    @Override
    public void show() {
        System.out.println("Aircraft Type: " + aircraftType());
        System.out.println("Cargo Capacity (in units): " + calculateCapacity());
    }
}


class PrivateJet implements Aircraft {
    private int seats;
   
    public PrivateJet(int seats) {
        this.seats = seats;
    }

    @Override
    public String aircraftType() {
        return "Private Jet";
    }

    @Override
    public int calculateCapacity() {
        return seats; 
    }

    @Override
    public void show() {
        System.out.println("Aircraft Type: " + aircraftType());
        System.out.println("Passenger Capacity: " + calculateCapacity());
    }
}

public class Main {
    public static void main(String[] args) {
      
        Aircraft passengerJet = new PassengerJet(30, 6);  
        Aircraft cargoPlane = new CargoPlane(50.0, 20.0); 
        Aircraft privateJet = new PrivateJet(8); 

       
        System.out.println("Passenger Jet Details:");
        passengerJet.show();
        
        System.out.println("\nCargo Plane Details:");
        cargoPlane.show();
        
        System.out.println("\nPrivate Jet Details:");
        privateJet.show();
    }
}
